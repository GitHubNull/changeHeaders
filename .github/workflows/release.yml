name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: |
          mvn clean package
          
      - name: List target directory
        run: |
          ls -la ./target/

      - name: Extract version from tag
        id: extract_version
        run: |
          TAG_NAME=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Remove 'v' prefix if present
          VERSION=$(echo "$TAG_NAME" | sed -e 's/^v//')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Get release notes
        id: release_notes
        run: |
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "## Change Headers Extension v${{ steps.extract_version.outputs.VERSION }}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "一个功能强大的Burp Suite扩展插件，允许安全专业人员和开发人员轻松修改HTTP请求头。" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### 主要特性" >> $GITHUB_OUTPUT
          echo "- 强大的请求头管理（添加/修改/删除请求头）" >> $GITHUB_OUTPUT
          echo "- 与所有主要Burp Suite工具无缝协作（Proxy、Repeater、Intruder、Scanner、Extender）" >> $GITHUB_OUTPUT
          echo "- 智能配置管理，自动保存并在会话间持久化" >> $GITHUB_OUTPUT
          echo "- 支持导入/导出配置（JSON格式）" >> $GITHUB_OUTPUT
          echo "- 多语言支持（中文和英文）" >> $GITHUB_OUTPUT
          echo "- 右键菜单集成，支持主动请求头替换" >> $GITHUB_OUTPUT
          echo "- 两种操作模式（自动模式和手动模式）" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "有关更多详细信息，请参阅 [README.md](https://github.com/${{ github.repository }}/blob/main/README.md)" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Change Headers v${{ steps.extract_version.outputs.VERSION }}
          body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/changeHeaders-${{ steps.extract_version.outputs.VERSION }}.jar
          asset_name: changeHeaders-${{ steps.extract_version.outputs.VERSION }}.jar
          asset_content_type: application/java-archive